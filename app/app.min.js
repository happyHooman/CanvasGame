class Background{constructor(){this.canvas=document.getElementById("background_layer")}load(){console.log("background loaded");let t=this.canvas.getContext("2d");t.beginPath(),t.moveTo(200,30),t.lineTo(200,300),t.lineWidth=10,t.strokeStyle="blue",t.lineCap="round",t.stroke()}}class Sprite{constructor(t){this.options=t,this.context=t.context,this.tick=0,this.frameIndex=0,this.positionX=0,this.positionY=0,this.image=new Image,this.image.src=this.options.imageSrc,this.direction=this.options.animations.down,this.isMoving=!1,this.stepLength=10,console.log(this.options.ticksPerFrame,this.stepLength)}render(){let t=this,i=t.options.canvas.getContext("2d");i.clearRect(t.positionX-t.stepLength,t.positionY-t.stepLength,t.options.width+2*t.stepLength,t.options.height+2*t.stepLength),i.drawImage(t.image,t.frameIndex*t.options.width,t.direction*t.options.height,t.options.width,t.options.height,t.positionX,t.positionY,t.options.width,t.options.height),console.log(t.positionX,t.positionY),console.log(background.canvas.getContext("2d").getImageData(t.positionX,t.positionY,10,10))}update(){let t=this;if(t.tick++,t.tick>t.options.ticksPerFrame){switch(t.tick=0,t.frameIndex=t.frameIndex<t.options.numberOfFrames-1?t.frameIndex+1:0,!0){case t.direction===t.options.animations.down:t.positionY=t.positionY>t.options.canvas.height-t.options.height-t.stepLength?t.options.canvas.height-t.options.height:t.positionY+t.stepLength;break;case t.direction===t.options.animations.up:t.positionY=t.positionY<t.stepLength?0:t.positionY-t.stepLength;break;case t.direction===t.options.animations.left:t.positionX=t.positionX<t.stepLength?0:t.positionX-t.stepLength;break;case t.direction===t.options.animations.right:t.positionX=t.positionX>t.options.canvas.width-t.options.width-t.stepLength?t.options.canvas.width-t.options.width:t.positionX+t.stepLength}t.render()}t.isMoving?window.requestAnimationFrame(function(){t.update()}):window.requestAnimationFrame(function(){t.tick=0,t.frameIndex=0,t.render()})}move(t){this.isMoving=!0,this.frameIndex=0,this.direction=this.options.animations[t],console.log("moving",t),this.update()}stopMoving(){let t=this;t.isMoving=!1,t.frameIndex=0,window.requestAnimationFrame(function(){t.update()})}}class Player{constructor(t){this.name=t,this.options={canvas:document.getElementById("player1_layer"),imageSrc:"img/rpg.png",numberOfFrames:4,ticksPerFrame:3,width:34,height:52,animations:{down:0,left:1,right:2,up:3}},this.sprite=new Sprite(this.options),this.fired=!1}initialize(){let t=this;window.addEventListener("load",function(){t.sprite.render()}),document.onkeydown=function(i){t.move(i)},document.onkeyup=function(i){t.stopMoving(i)}}move(t){if(this.fired)t.preventDefault();else switch(this.fired=t.keyCode,t.keyCode){case 37:t.preventDefault(),this.sprite.move("left");break;case 38:t.preventDefault(),this.sprite.move("up");break;case 39:t.preventDefault(),this.sprite.move("right");break;case 40:t.preventDefault(),this.sprite.move("down");break;default:console.log("only arrow keys work my friend")}}stopMoving(t){this.fired===t.keyCode&&(this.fired=!1,this.sprite.stopMoving())}}let background=new Background;background.load();let player=new Player("Valentin");player.initialize();